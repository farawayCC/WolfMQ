name: CI/CD Pipeline

on:
  push:
    branches:
      - "**" # This will trigger the workflow for pushes to any branch
  pull_request:
    branches:
      - "**" # This will trigger the workflow for pull requests to any branch

permissions:
  contents: write  # Allow write access to contents for GITHUB_TOKEN

jobs:
  build_test_lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      # --- Basic setup ---
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # --- Node Section ---
      - run: npm ci

      - name: Build Project
        run: npm run build --if-present

      # --- Linting Section ---
      - run: npm run lint

      # --- Run tests ---
      - name: Run general tests
        run: npm run test

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    # This ensures the release step runs only for pushes to the main branch.
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      # --- Basic setup ---
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # --- Node Section ---
      - run: npm ci

      - name: Build Project
        run: npm run build --if-present

      # --- Delete dev dependencies ---
      - name: Prepare release
        run: rm -rf node_modules
      - run: npm ci --production

      # --- Cleanup ---
      - name: Cleanup
        run: rm -rf resources/db.json

      # --- Assemble release ---
      - run: mkdir lowmq-latest
      - run: cp -R resources lowmq-latest
      - run: cp -R lowmq.js lowmq-latest
      - run: cp -R config/pm2.config.cjs lowmq-latest
      - run: cp -R package.json lowmq-latest
      - run: cp -R package-lock.json lowmq-latest
      - run: cp -R node_modules lowmq-latest
      - run: cp -R LICENSE lowmq-latest
      - run: cp -R README.md lowmq-latest

      - run: zip -r lowmq.zip lowmq-latest

      # --- Get the last commit message ---
      - name: Get the last commit message
        id: get_commit_message
        run: |
          commit_message=$(git log -1 --pretty=%B | head -n 1)
          echo "commit_message=${commit_message}" >> $GITHUB_ENV

      # --- Get version from package.json ---
      - name: Get version from package.json
        id: get_version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "version=${version}" >> $GITHUB_ENV

      # --- Create tags ---
      - name: Create tags
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -fa v${{ env.version }} -m "Version ${{ env.version }}"
          git push origin --tags --force

      # --- Create release via GitHub Script ---
      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        env:
          COMMIT_MESSAGE: ${{ env.commit_message }}
          VERSION: ${{ env.version }}
        with:
          script: |
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.VERSION}`,
              name: process.env.COMMIT_MESSAGE,
              body: `Release version ${process.env.VERSION}`,
              make_latest: 'true'
            });
            core.setOutput('upload_url', release.data.upload_url);

      # --- Upload Release Asset ---
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lowmq.zip
          asset_name: lowmq.zip
          asset_content_type: application/zip